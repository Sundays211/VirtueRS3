/**
 * 
 */
/* globals Java */
var ActionBar = Java.type('org.virtue.game.entity.combat.impl.ability.ActionBar');

var _config = require('engine/config');
var anim = require('anim');
var chat = require('chat');
var util = require('util');

var attackAbilities = require('./attack');

module.exports = (function () {
	return {
		run : runAbility
	};
	//param 2806 = ability type (1=Attack, 2=Strength, 3=Ranged, 4=Magic, 5=Defence, 6=Constitution, 7=Prayer)
	//param 2796 = cooldown (in server cycles)
	//param 2807 = level required
	//param 2915 = animations enum
	//param 2811 = dual wield?
	//param 2812 = two-handed?
	//param 2796 = Adrenaline required (0=basic, 50=threshold, 100=ultimate)
	
	function runAbility (player, abilityId) {
		//TODO: Check if the player has the required level for the ability
		chat.sendDebugMessage(player, "Running ability: "+_config.structParam(abilityId, 2794)+" ("+abilityId+")");
		//util.runClientScript(player, 6066, [ abilityId ]);
		var target = player.getCombatSchedule().getAbilityLock();
		
		switch (_config.structParam(player, 2806)) {
		case 1://Attack
			attackAbilities.handle(player, target, abilityId);
			break;
		default:
			chat.sendDebugMessage(player, "Unhandled ability type: "+_config.structParam(player, 2806));
			break;
		}
		
		var cooldown = _config.structParam(abilityId, 2796);
		var animation = _config.enumValue(_config.structParam(abilityId, 2915), abilityId);
		
		util.runClientScript(player, 6570, [ 1, 1, cooldown, 0, abilityId ]);
		
		
		anim.run(player, animation, function () {
			chat.sendDebugMessage(player, "Finished running "+_config.structParam(abilityId, 2794));
		});
		//player.getDispatcher().sendCS2Script(6570, new Object[] { 1, 1, ability.getCooldown(), 0, ability.getScriptId() });
		//player.getDispatcher().sendCS2Script(6066, new Object[] { 14881 });//14881 is 4 ticks
		
		var ability = ActionBar.getAbilities().get(abilityId);
		if (ability !== null) {
			player.getCombatSchedule().run(ability);
		}
	}
})();
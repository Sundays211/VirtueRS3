/**
 * Copyright (c) 2014 Virtue Studios
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
package org.virtue;

import java.math.BigInteger;

import org.virtue.game.map.CoordGrid;


/**
 * @author Im Frizzy <skype:kfriz1998>
 * @author Kayla
 * @since Aug 8, 2014
 */
public class Constants {
	
	/**
	 * The Framework Name & Server Name
	 */
	public static final String FRAME_NAME = "Virtue";
	
        
    public static final String SERVER_IP = "127.0.0.1";
        
    public static final int SERVER_PORT = 43594;
        
	/**
	 * The Framework Version
	 */
	public static final double FRAME_VERSION = 1.1;
	
	/**
	 * The Framework Major Revision
	 */
	public static final int FRAME_MAJOR = 865;
	
	/**
	 * The Framework Minor Revision
	 */
	public static final int FRAME_MINOR = 1;
	
	/**
	 * The interval between maintenance thread cycles, in minutes
	 * The maintenance thread is responsible for auto-saving player data and the account index, and for performing cleanup operations
	 */
	public static final int MAINTANANCE_INTERVAL = 1;
	
	/**
	 * Represents the initial server day. This is a day determined by Jagex, a few months prior to the release of RS2.
	 */
	public static final int SERVER_DAY_INITIAL = 11745;
	
	/**
	 * The number of ticks before a ground item is destroyed, after being dropped
	 */
	public static final int ITEM_REMOVAL_DELAY = 300;
	
	/**
	 * The number of ticks where the player is inactive before they are automatically logged out
	 * NB: 100 ticks = 1 minute
	 */
	public static final int KICKOUT_TIME = 500;
	
	/**
	 * The rate to multiply all xp gains by, where 1 is the normal RuneScape rate
	 */
	public static final float GLOBAL_XP_MULTIPLYER = 1;
	
	/**
	 * This option will disable off-hand weapons to make pre-eoc more reallistic.
	 */
	public static final boolean legacyOnly = false;
	
	/**
	 * MYSQL Database settings.
	 */
    public static final boolean Mysql = false;
	public static final String DB_HOST = "localhost";
	public static final String DB_USER = "root";
	public static final String DB_PASS = "";
	public static final String DB_NAME = "runescape";
	
	/**
	 * Whether or not to lead GE Prices from a JSON File
	 */
	public static final boolean CUSTOM_GE_PRICES = true;
	
	/**
	 * The Start spawn location
	 */
	public static final CoordGrid START_TILE = new CoordGrid(3210, 3256, 0);

	/**
	 * The Death Spawn Location
	 */
	public static final CoordGrid RESPAWN_TILE = new CoordGrid(3210, 3256, 0);
	
	/**
	 * The Cache Repository
	 */
	public static final String CACHE_REPOSITORY = "repository/cache_865/";
	
	/**
	 * The packed npc extra data, which includes descriptions and animations
	 */
	public static final String NPC_DATA_PATH = "./data/npc_data_861.dat";
	
	/**
	 * The packed item extra data, which includes descriptions and weights
	 */
	public static final String OBJECT_DATA_PATH = "./data/object_data_863.dat";
	
	/**
	 * The OnDemand Delta Keys
	 */
	public static final int[] ONDEMAND_DELTA = { 3264,69795,41651,35866,358716,44375,18239,20886,179447,1100187,431692,560241,841351,1162450,35303,830731,1007,20622,1244,66629,2153,119,1372622,4274445,8991,23274 };
	
	/**
	 * The OnDemand Session Token
	 */
	private static final String ONDEMAND_TOKEN = "o6hcMvF7YGtmQdDklg*V9SsG5-y*DfWB";
		
	
	public static String getJs5Token () {
		return Virtue.getInstance().getProperty("js5.token", ONDEMAND_TOKEN);
	}
	
	/**
	 * The Login Session Token
	 */
	private static final String LOGIN_TOKEN = "wwGlrZHF5gKN6D3mDdihco3oPeYN2KFybL9hUUFqOvk";
	
	public static String getLoginToken () {
		return Virtue.getInstance().getProperty("login.token", LOGIN_TOKEN);
	}
	

	public static BigInteger getLoginModulus () {
		return new BigInteger(Virtue.getInstance().getProperty("login.modulus", LOGIN_MODULUS));
	}

	public static BigInteger getLoginKey () {
		return new BigInteger(Virtue.getInstance().getProperty("login.key", LOGIN_EXPONENT));
	}

	/**
	 * The OnDemand Modulus RSA Key
	 */
	public static final String ONDEMAND_MODULUS = "644555921309203364383873323307508859763780810238361124882354202809913114215679270028353324619752015289193865560919115466911247505664713706285623415526718779301847717729524439997238960471862828983522496318211284735235680669074434704368472398586976790272042766589957827133643651480855714828045697079685358716755952303802668005373957252146266384984552978156100565887379786017329873934778088847792598788189976968353742014857643260850544159197353032020803080461248039096304771398028154088238593106178934004599820776044193444634762644938617396710520957635127468296704423723052475195049651185943559765455063128876698327124321583659771499004807898568898869710552703728139629639684048906689994405218745993651358827653974065302677654669103832513817057879887206411359774536261959075764016076002308800489919464958865406149187940330395026256115275889865439735112840295366702066708652396481378320705316742966133147946462448550136518446007763871644077840088563673516041222400833044017627818465770864462117913314047770633277544383166112305953365744754303544889683205008871610646989044796721709747197826577534223998059542716368172836980205900195894641315962025064414479278452550553234378717374781539434108037581738540061847877690714189114337703312451";

	/**
	 * The OnDemand Exponent RSA Key
	 */
	public static final String ONDEMAND_EXPONENT = "250497265906974833923695828991901531320986576083297341208074241200672704259782275777380093352840133503452519276692705966739848848273193129058315583463776604190275132681858911557283310545468151642741016238534589959968457308716081784644780688649317162034101793872869155699740662575604544862754228979348857691315960528828813557179527461009283379244649043344002340863200377647151866718323968490368455851430470015166544228732230249383758178353549624266747859367196965924331027167978044228869752451506438334027456782670027725328400820400484994647557391869733076239636566706229252837601883145490066179808969862710980154597481955954389736341516054503689047553735853681174466566705531378679565761335689635886134607825458165856088248309515121023843349478209465471764197780514908411943165403600518784548755648259177627764484120791206746197182221269031141373957534131300947562348540161168004928950929422272065987531948799216739454773466851303680129132852010497752725396312203239034973641427736696818432440604757679004279802026340717249758892046736669833867328907643122589063033388925862240828490569158358736373483902183077036765904540013717906328089841513144120908910105793485443016813605130642987206485769403603552831281539737188360000647639473";

	/**
	 * The Login Modulus RSA Key
	 */
	public static final String LOGIN_MODULUS = "17197354634246416821101300577487093352985874735440115991734785489378740216571093592740384080505201777229375139590259766092975086053808910952972173569788032162002714751959776861559593547815090619459077879259923769674774755835597421030285909596941396471189509927204026044686252989054194604923098157884382357771305080884953786002225209901559485871211004435333225494229643779060083007361076496994308018203054324755499199682112290406145095154421501355965413853638333122741130603978444154448586214234498243857011698277736034063448356048512754786474418955293443715724489856768362722782577651074797869371137154415649556293707";

	/**
	 * The Login Exponent RSA Key
	 */
	public static final String LOGIN_EXPONENT = "8976674316537767566917228305464943108660661745650104947758598605461911959178487582801406823778971384061517831915455335738202614077769031765113219794144968372521642262382959345973909939075734852084709327122125398428435381881684425225827405609072252801973266171776592260290706448304849828948750551338432276072896924103695007906983068523972904990830055708684359396181260179512655349636751592339614495375031502150021176409399366848289187864143118060214699645626873731190995839946048026126182910690628307330190765175245441730781832876829823914950967462022744871004856736776346591735003554438203513048485694690645875717225";


	/**
	 * The 865 Packet Sizes
	 */
	public static final int[] PACKET_SIZES = new int[122];

	/**
	 * Loads the 865 Packet Sizes
	 */
	static {
		PACKET_SIZES[0] = 12;
		PACKET_SIZES[1] = 8;
		PACKET_SIZES[2] = 16;
		PACKET_SIZES[3] = -1;
		PACKET_SIZES[4] = 3;
		PACKET_SIZES[5] = 9;
		PACKET_SIZES[6] = -1;
		PACKET_SIZES[7] = -1;
		PACKET_SIZES[8] = 17;
		PACKET_SIZES[9] = 6;
		PACKET_SIZES[10] = 8;
		PACKET_SIZES[11] = 8;
		PACKET_SIZES[12] = 0;
		PACKET_SIZES[13] = 18;
		PACKET_SIZES[14] = -2;
		PACKET_SIZES[15] = 0;
		PACKET_SIZES[16] = 8;
		PACKET_SIZES[17] = 4;
		PACKET_SIZES[18] = 4;
		PACKET_SIZES[19] = 8;
		PACKET_SIZES[20] = 9;
		PACKET_SIZES[21] = 3;
		PACKET_SIZES[22] = 3;
		PACKET_SIZES[23] = 3;
		PACKET_SIZES[24] = 3;
		PACKET_SIZES[25] = -2;
		PACKET_SIZES[26] = -1;
		PACKET_SIZES[27] = 7;
		PACKET_SIZES[28] = 4;
		PACKET_SIZES[29] = 7;
		PACKET_SIZES[30] = -1;
		PACKET_SIZES[31] = 3;
		PACKET_SIZES[32] = 3;
		PACKET_SIZES[33] = -1;
		PACKET_SIZES[34] = 9;
		PACKET_SIZES[35] = -2;
		PACKET_SIZES[36] = 3;
		PACKET_SIZES[37] = -1;
		PACKET_SIZES[38] = 1;
		PACKET_SIZES[39] = 9;
		PACKET_SIZES[40] = -1;
		PACKET_SIZES[41] = 8;
		PACKET_SIZES[42] = 4;
		PACKET_SIZES[43] = 9;
		PACKET_SIZES[44] = 15;
		PACKET_SIZES[45] = 8;
		PACKET_SIZES[46] = -2;
		PACKET_SIZES[47] = 6;
		PACKET_SIZES[48] = -2;
		PACKET_SIZES[49] = 3;
		PACKET_SIZES[50] = 3;
		PACKET_SIZES[51] = 0;
		PACKET_SIZES[52] = -1;
		PACKET_SIZES[53] = 3;
		PACKET_SIZES[54] = -1;
		PACKET_SIZES[55] = 16;
		PACKET_SIZES[56] = 7;
		PACKET_SIZES[57] = 5;
		PACKET_SIZES[58] = 4;
		PACKET_SIZES[59] = 18;
		PACKET_SIZES[60] = 4;
		PACKET_SIZES[61] = 2;
		PACKET_SIZES[62] = -1;
		PACKET_SIZES[63] = 0;
		PACKET_SIZES[64] = -1;
		PACKET_SIZES[65] = 7;
		PACKET_SIZES[66] = -1;
		PACKET_SIZES[67] = -1;
		PACKET_SIZES[68] = -1;
		PACKET_SIZES[69] = 2;
		PACKET_SIZES[70] = 1;
		PACKET_SIZES[71] = -1;
		PACKET_SIZES[72] = 5;
		PACKET_SIZES[73] = 3;
		PACKET_SIZES[74] = -1;
		PACKET_SIZES[75] = 7;
		PACKET_SIZES[76] = 4;
		PACKET_SIZES[77] = 0;
		PACKET_SIZES[78] = -2;
		PACKET_SIZES[79] = 1;
		PACKET_SIZES[80] = 9;
		PACKET_SIZES[81] = 8;
		PACKET_SIZES[82] = -1;
		PACKET_SIZES[83] = -2;
		PACKET_SIZES[84] = 15;
		PACKET_SIZES[85] = -1;
		PACKET_SIZES[86] = -1;
		PACKET_SIZES[87] = -1;
		PACKET_SIZES[88] = -1;
		PACKET_SIZES[89] = 7;
		PACKET_SIZES[90] = 4;
		PACKET_SIZES[91] = 3;
		PACKET_SIZES[92] = -1;
		PACKET_SIZES[93] = 3;
		PACKET_SIZES[94] = 2;
		PACKET_SIZES[95] = 4;
		PACKET_SIZES[96] = 8;
		PACKET_SIZES[97] = 4;
		PACKET_SIZES[98] = -2;
		PACKET_SIZES[99] = 7;
		PACKET_SIZES[100] = 1;
		PACKET_SIZES[101] = 6;
		PACKET_SIZES[102] = -2;
		PACKET_SIZES[103] = -2;
		PACKET_SIZES[104] = 1;
		PACKET_SIZES[105] = -1;
		PACKET_SIZES[106] = 9;
		PACKET_SIZES[107] = 1;
		PACKET_SIZES[108] = 4;
		PACKET_SIZES[109] = -2;
		PACKET_SIZES[110] = 11;
		PACKET_SIZES[111] = -2;
		PACKET_SIZES[112] = 8;
		PACKET_SIZES[113] = 3;
		PACKET_SIZES[114] = -1;
		PACKET_SIZES[115] = -1;
		PACKET_SIZES[116] = 3;
		PACKET_SIZES[117] = 9;
		PACKET_SIZES[118] = -1;
		PACKET_SIZES[119] = 11;
		PACKET_SIZES[120] = -1;
		PACKET_SIZES[121] = 3;
	}
	
}
